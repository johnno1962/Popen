import XCTest
@testable import Popen

final class PopenTests: XCTestCase {
    func testExample() throws {
        // XCTest Documentation
        // https://developer.apple.com/documentation/xctest

        // Defining Test Cases and Test Methods
        // https://developer.apple.com/documentation/xctest/defining_test_cases_and_test_methods

        { () -> () in
            let testFile = "/tmp/popen.txt"

            Fopen(path: testFile, mode: .write)?.print("Hello Test")

            if let fp = Popen(cmd: "/usr/bin/wc -w "+testFile,
                              mode: .other("r+")) {
                // This could work but doesn't
                fp.print("Hello Test")
                fp.flush()

                XCTAssertEqual(fp.readLine(),
                               "       2 "+testFile,
                               "Command output")
            } else {
                XCTFail("Could not open process r/w")
            }

            #if !os(Linux)
            XCTAssert(Int(Date().timeIntervalSince1970) -
                      (Fstat(path: testFile)?
                .st_mtimespec.tv_sec ?? 0) < 60, "file recent")
            #endif

            XCTAssertEqual(Array(Glob(pattern: "/tmp/popen.*")!),
                           ["/tmp/popen.txt"], "file count")

            guard let inp = Popen(cmd: "/bin/ls /tmp"),
                  let out = Popen(cmd: "/usr/bin/wc", mode: .write) else {
                return XCTFail("Could not open processes")
            }

            var lines = 0
            while let line = inp.readLine() {
                out.print(line)
                lines += 1
            }
            XCTAssertNotEqual(lines, 0,
                              "Lines transferred")
        }()

        XCTAssertEqual(Popen.openFILEStreams, 0, "All closed")
    }
}
